/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infusionsoft.api;

import com.infusionsoft.ApiException;
import com.infusionsoft.model.InfusionsoftError;
import com.infusionsoft.model.InfusionsoftOrder;
import com.infusionsoft.model.InfusionsoftOrderList;
import com.infusionsoft.model.InfusionsoftTransaction;
import com.infusionsoft.model.InfusionsoftTransactionList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ECommerceApi
 */
@Ignore
public class ECommerceApiTest {

    private final ECommerceApi api = new ECommerceApi();

    
    /**
     * Retrieve an Order
     *
     * Retrieves a single order. The order may or may not have items.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOrderUsingGETTest() throws ApiException {
        Long orderId = null;
        InfusionsoftOrder response = api.getOrderUsingGET(orderId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Transaction
     *
     * Retrieves a single transaction
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTransactionUsingGETTest() throws ApiException {
        Long transactionId = null;
        InfusionsoftTransaction response = api.getTransactionUsingGET(transactionId);

        // TODO: test validations
    }
    
    /**
     * List Orders
     *
     * Retrieves a list of all orders using the specified search criteria. Each order may or may not have items.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOrdersUsingGETTest() throws ApiException {
        String since = null;
        String until = null;
        Integer limit = null;
        Integer offset = null;
        Boolean paid = null;
        String order = null;
        Long contactId = null;
        Long productId = null;
        InfusionsoftOrderList response = api.listOrdersUsingGET(since, until, limit, offset, paid, order, contactId, productId);

        // TODO: test validations
    }
    
    /**
     * Retrieve Order Transactions
     *
     * Retrieves a list of all transactions on a given order using the specified search criteria
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTransactionsForOrderUsingGETTest() throws ApiException {
        Long orderId = null;
        String since = null;
        String until = null;
        Integer limit = null;
        Integer offset = null;
        Long contactId = null;
        InfusionsoftTransactionList response = api.listTransactionsForOrderUsingGET(orderId, since, until, limit, offset, contactId);

        // TODO: test validations
    }
    
    /**
     * List Transactions
     *
     * Retrieves a list transactions for a given contact
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTransactionsUsingGETTest() throws ApiException {
        String since = null;
        String until = null;
        Integer limit = null;
        Integer offset = null;
        Long contactId = null;
        InfusionsoftTransactionList response = api.listTransactionsUsingGET(since, until, limit, offset, contactId);

        // TODO: test validations
    }
    
}
